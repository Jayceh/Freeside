#!/usr/bin/perl

use strict;
use vars qw( $opt_r $opt_p $opt_o $opt_v $opt_t );
use Getopt::Std;
use FS::UID qw(adminsuidsetup);
use FS::Record qw(qsearch qsearchs);
use FS::part_pkg;
use FS::part_pkg_option;

getopts('rp:o:v:t:');

my $user = shift or &usage;
adminsuidsetup $user;

my %plan;
%plan = ( 'plan' => $opt_p ) if $opt_p;

foreach my $part_pkg ( qsearch('part_pkg',\%plan) ) {
  next if ! $part_pkg->freq && $opt_r;

  if ( $opt_o ) {

    my %hash = (
      'pkgpart'    => $part_pkg->pkgpart,
      'optionname' => $opt_o,
    );

    my $part_pkg_option = qsearchs('part_pkg_option', \%hash);

    if ( $part_pkg_option ) {
      next if $part_pkg_option->optionvalue eq $opt_v;
      $part_pkg_option->optionvalue($opt_v);
      my $error = $part_pkg_option->replace;
      die $error if $error;
    } else {
      $part_pkg_option = new FS::part_pkg_option { %hash,
                                                   'optionvalue'=>$opt_v,
                                                 };
      my $error = $part_pkg_option->insert;
      die $error if $error;
    }

  }

  if ( $opt_t ) {

    $part_pkg->taxclass($opt_t);
    my $error = $part_pkg->replace;

  }

}

sub usage {
  die "usage: part_pkg-bulk_change [ -r ] [ -o option_name -v option_value ] [ -t new_taxclass ] employee_username\n";
}

=head1 NAME

cust_main-bulk_change

=head1 SYNOPSIS

  part_pkg-bulk_change [ -r ] [ -o option_name -v option_value ] [ -t new_taxclass ] employee_username

=head1 DESCRIPTION

Command-line tool to change a set of package definitions.

Search options:

-r: recurring package definitions only

Change options:

-o: part_pkg_option optionname

-v: part_pkg_option optionvalue

-t: new taxclass

employee_username

=head1 BUGS

=head1 SEE ALSO

L<FS::part_pkg>

=cut

1;

